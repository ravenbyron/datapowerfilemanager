//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace DataPowerFileManager.WebReference {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="app-mgmt-protocol-soap", Namespace="http://www.datapower.com/schemas/appliance/management/1.0/wsdl")]
    public partial class appmgmtprotocol : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CompareConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCryptoArtifactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeviceInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeviceSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetErrorReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback PingOperationCompleted;
        
        private System.Threading.SendOrPostCallback RebootOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestartDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDeviceSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDomainConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetFirmwareOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubscribeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnsubscribeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public appmgmtprotocol() {            
            this.Url = "http://" + GlobalDataStore.GetInstance().strDataPowerHost + ":" 
                + GlobalDataStore.GetInstance().strDataPowerPort + "/service/mgmt/amp/1.0";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CompareConfigCompletedEventHandler CompareConfigCompleted;
        
        /// <remarks/>
        public event DeleteDomainCompletedEventHandler DeleteDomainCompleted;
        
        /// <remarks/>
        public event GetCryptoArtifactsCompletedEventHandler GetCryptoArtifactsCompleted;
        
        /// <remarks/>
        public event GetDeviceInfoCompletedEventHandler GetDeviceInfoCompleted;
        
        /// <remarks/>
        public event GetDeviceSettingsCompletedEventHandler GetDeviceSettingsCompleted;
        
        /// <remarks/>
        public event GetDomainConfigCompletedEventHandler GetDomainConfigCompleted;
        
        /// <remarks/>
        public event GetDomainListCompletedEventHandler GetDomainListCompleted;
        
        /// <remarks/>
        public event GetDomainStatusCompletedEventHandler GetDomainStatusCompleted;
        
        /// <remarks/>
        public event GetErrorReportCompletedEventHandler GetErrorReportCompleted;
        
        /// <remarks/>
        public event GetLogCompletedEventHandler GetLogCompleted;
        
        /// <remarks/>
        public event GetTokenCompletedEventHandler GetTokenCompleted;
        
        /// <remarks/>
        public event PingCompletedEventHandler PingCompleted;
        
        /// <remarks/>
        public event RebootCompletedEventHandler RebootCompleted;
        
        /// <remarks/>
        public event RestartDomainCompletedEventHandler RestartDomainCompleted;
        
        /// <remarks/>
        public event SetDeviceSettingsCompletedEventHandler SetDeviceSettingsCompleted;
        
        /// <remarks/>
        public event SetDomainConfigCompletedEventHandler SetDomainConfigCompleted;
        
        /// <remarks/>
        public event SetFileCompletedEventHandler SetFileCompleted;
        
        /// <remarks/>
        public event SetFirmwareCompletedEventHandler SetFirmwareCompleted;
        
        /// <remarks/>
        public event StartDomainCompletedEventHandler StartDomainCompleted;
        
        /// <remarks/>
        public event StopDomainCompletedEventHandler StopDomainCompleted;
        
        /// <remarks/>
        public event SubscribeCompletedEventHandler SubscribeCompleted;
        
        /// <remarks/>
        public event UnsubscribeCompletedEventHandler UnsubscribeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("CompareConfigResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public CompareConfigResponse CompareConfig([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] CompareConfigRequest CompareConfigRequest) {
            object[] results = this.Invoke("CompareConfig", new object[] {
                        CompareConfigRequest});
            return ((CompareConfigResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CompareConfigAsync(CompareConfigRequest CompareConfigRequest) {
            this.CompareConfigAsync(CompareConfigRequest, null);
        }
        
        /// <remarks/>
        public void CompareConfigAsync(CompareConfigRequest CompareConfigRequest, object userState) {
            if ((this.CompareConfigOperationCompleted == null)) {
                this.CompareConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompareConfigOperationCompleted);
            }
            this.InvokeAsync("CompareConfig", new object[] {
                        CompareConfigRequest}, this.CompareConfigOperationCompleted, userState);
        }
        
        private void OnCompareConfigOperationCompleted(object arg) {
            if ((this.CompareConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompareConfigCompleted(this, new CompareConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("DeleteDomainResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public DeleteDomainResponse DeleteDomain([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] DeleteDomainRequest DeleteDomainRequest) {
            object[] results = this.Invoke("DeleteDomain", new object[] {
                        DeleteDomainRequest});
            return ((DeleteDomainResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDomainAsync(DeleteDomainRequest DeleteDomainRequest) {
            this.DeleteDomainAsync(DeleteDomainRequest, null);
        }
        
        /// <remarks/>
        public void DeleteDomainAsync(DeleteDomainRequest DeleteDomainRequest, object userState) {
            if ((this.DeleteDomainOperationCompleted == null)) {
                this.DeleteDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDomainOperationCompleted);
            }
            this.InvokeAsync("DeleteDomain", new object[] {
                        DeleteDomainRequest}, this.DeleteDomainOperationCompleted, userState);
        }
        
        private void OnDeleteDomainOperationCompleted(object arg) {
            if ((this.DeleteDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDomainCompleted(this, new DeleteDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetCryptoArtifactsResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public GetCryptoArtifactsResponse GetCryptoArtifacts([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] GetCryptoArtifactsRequest GetCryptoArtifactsRequest) {
            object[] results = this.Invoke("GetCryptoArtifacts", new object[] {
                        GetCryptoArtifactsRequest});
            return ((GetCryptoArtifactsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCryptoArtifactsAsync(GetCryptoArtifactsRequest GetCryptoArtifactsRequest) {
            this.GetCryptoArtifactsAsync(GetCryptoArtifactsRequest, null);
        }
        
        /// <remarks/>
        public void GetCryptoArtifactsAsync(GetCryptoArtifactsRequest GetCryptoArtifactsRequest, object userState) {
            if ((this.GetCryptoArtifactsOperationCompleted == null)) {
                this.GetCryptoArtifactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCryptoArtifactsOperationCompleted);
            }
            this.InvokeAsync("GetCryptoArtifacts", new object[] {
                        GetCryptoArtifactsRequest}, this.GetCryptoArtifactsOperationCompleted, userState);
        }
        
        private void OnGetCryptoArtifactsOperationCompleted(object arg) {
            if ((this.GetCryptoArtifactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCryptoArtifactsCompleted(this, new GetCryptoArtifactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetDeviceInfoResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public GetDeviceInfoResponse GetDeviceInfo([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] GetDeviceInfoRequest GetDeviceInfoRequest) {
            object[] results = this.Invoke("GetDeviceInfo", new object[] {
                        GetDeviceInfoRequest});
            return ((GetDeviceInfoResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeviceInfoAsync(GetDeviceInfoRequest GetDeviceInfoRequest) {
            this.GetDeviceInfoAsync(GetDeviceInfoRequest, null);
        }
        
        /// <remarks/>
        public void GetDeviceInfoAsync(GetDeviceInfoRequest GetDeviceInfoRequest, object userState) {
            if ((this.GetDeviceInfoOperationCompleted == null)) {
                this.GetDeviceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeviceInfoOperationCompleted);
            }
            this.InvokeAsync("GetDeviceInfo", new object[] {
                        GetDeviceInfoRequest}, this.GetDeviceInfoOperationCompleted, userState);
        }
        
        private void OnGetDeviceInfoOperationCompleted(object arg) {
            if ((this.GetDeviceInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeviceInfoCompleted(this, new GetDeviceInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetDeviceSettingsResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public GetDeviceSettingsResponse GetDeviceSettings([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] GetDeviceSettingsRequest GetDeviceSettingsRequest) {
            object[] results = this.Invoke("GetDeviceSettings", new object[] {
                        GetDeviceSettingsRequest});
            return ((GetDeviceSettingsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeviceSettingsAsync(GetDeviceSettingsRequest GetDeviceSettingsRequest) {
            this.GetDeviceSettingsAsync(GetDeviceSettingsRequest, null);
        }
        
        /// <remarks/>
        public void GetDeviceSettingsAsync(GetDeviceSettingsRequest GetDeviceSettingsRequest, object userState) {
            if ((this.GetDeviceSettingsOperationCompleted == null)) {
                this.GetDeviceSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeviceSettingsOperationCompleted);
            }
            this.InvokeAsync("GetDeviceSettings", new object[] {
                        GetDeviceSettingsRequest}, this.GetDeviceSettingsOperationCompleted, userState);
        }
        
        private void OnGetDeviceSettingsOperationCompleted(object arg) {
            if ((this.GetDeviceSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeviceSettingsCompleted(this, new GetDeviceSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetDomainConfigResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public GetDomainConfigResponse GetDomainConfig([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] GetDomainConfigRequest GetDomainConfigRequest) {
            object[] results = this.Invoke("GetDomainConfig", new object[] {
                        GetDomainConfigRequest});
            return ((GetDomainConfigResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainConfigAsync(GetDomainConfigRequest GetDomainConfigRequest) {
            this.GetDomainConfigAsync(GetDomainConfigRequest, null);
        }
        
        /// <remarks/>
        public void GetDomainConfigAsync(GetDomainConfigRequest GetDomainConfigRequest, object userState) {
            if ((this.GetDomainConfigOperationCompleted == null)) {
                this.GetDomainConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainConfigOperationCompleted);
            }
            this.InvokeAsync("GetDomainConfig", new object[] {
                        GetDomainConfigRequest}, this.GetDomainConfigOperationCompleted, userState);
        }
        
        private void OnGetDomainConfigOperationCompleted(object arg) {
            if ((this.GetDomainConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainConfigCompleted(this, new GetDomainConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetDomainListResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public GetDomainListResponse GetDomainList([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] GetDomainListRequest GetDomainListRequest) {
            object[] results = this.Invoke("GetDomainList", new object[] {
                        GetDomainListRequest});
            return ((GetDomainListResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainListAsync(GetDomainListRequest GetDomainListRequest) {
            this.GetDomainListAsync(GetDomainListRequest, null);
        }
        
        /// <remarks/>
        public void GetDomainListAsync(GetDomainListRequest GetDomainListRequest, object userState) {
            if ((this.GetDomainListOperationCompleted == null)) {
                this.GetDomainListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainListOperationCompleted);
            }
            this.InvokeAsync("GetDomainList", new object[] {
                        GetDomainListRequest}, this.GetDomainListOperationCompleted, userState);
        }
        
        private void OnGetDomainListOperationCompleted(object arg) {
            if ((this.GetDomainListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainListCompleted(this, new GetDomainListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetDomainStatusResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public GetDomainStatusResponse GetDomainStatus([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] GetDomainStatusRequest GetDomainStatusRequest) {
            object[] results = this.Invoke("GetDomainStatus", new object[] {
                        GetDomainStatusRequest});
            return ((GetDomainStatusResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainStatusAsync(GetDomainStatusRequest GetDomainStatusRequest) {
            this.GetDomainStatusAsync(GetDomainStatusRequest, null);
        }
        
        /// <remarks/>
        public void GetDomainStatusAsync(GetDomainStatusRequest GetDomainStatusRequest, object userState) {
            if ((this.GetDomainStatusOperationCompleted == null)) {
                this.GetDomainStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainStatusOperationCompleted);
            }
            this.InvokeAsync("GetDomainStatus", new object[] {
                        GetDomainStatusRequest}, this.GetDomainStatusOperationCompleted, userState);
        }
        
        private void OnGetDomainStatusOperationCompleted(object arg) {
            if ((this.GetDomainStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainStatusCompleted(this, new GetDomainStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetErrorReportResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public GetErrorReportResponse GetErrorReport([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] GetErrorReportRequest GetErrorReportRequest) {
            object[] results = this.Invoke("GetErrorReport", new object[] {
                        GetErrorReportRequest});
            return ((GetErrorReportResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetErrorReportAsync(GetErrorReportRequest GetErrorReportRequest) {
            this.GetErrorReportAsync(GetErrorReportRequest, null);
        }
        
        /// <remarks/>
        public void GetErrorReportAsync(GetErrorReportRequest GetErrorReportRequest, object userState) {
            if ((this.GetErrorReportOperationCompleted == null)) {
                this.GetErrorReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetErrorReportOperationCompleted);
            }
            this.InvokeAsync("GetErrorReport", new object[] {
                        GetErrorReportRequest}, this.GetErrorReportOperationCompleted, userState);
        }
        
        private void OnGetErrorReportOperationCompleted(object arg) {
            if ((this.GetErrorReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetErrorReportCompleted(this, new GetErrorReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetLogResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public GetLogResponse GetLog([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] GetLogRequest GetLogRequest) {
            object[] results = this.Invoke("GetLog", new object[] {
                        GetLogRequest});
            return ((GetLogResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogAsync(GetLogRequest GetLogRequest) {
            this.GetLogAsync(GetLogRequest, null);
        }
        
        /// <remarks/>
        public void GetLogAsync(GetLogRequest GetLogRequest, object userState) {
            if ((this.GetLogOperationCompleted == null)) {
                this.GetLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogOperationCompleted);
            }
            this.InvokeAsync("GetLog", new object[] {
                        GetLogRequest}, this.GetLogOperationCompleted, userState);
        }
        
        private void OnGetLogOperationCompleted(object arg) {
            if ((this.GetLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogCompleted(this, new GetLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetTokenResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public GetTokenResponse GetToken([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] GetTokenRequest GetTokenRequest) {
            object[] results = this.Invoke("GetToken", new object[] {
                        GetTokenRequest});
            return ((GetTokenResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetTokenAsync(GetTokenRequest GetTokenRequest) {
            this.GetTokenAsync(GetTokenRequest, null);
        }
        
        /// <remarks/>
        public void GetTokenAsync(GetTokenRequest GetTokenRequest, object userState) {
            if ((this.GetTokenOperationCompleted == null)) {
                this.GetTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTokenOperationCompleted);
            }
            this.InvokeAsync("GetToken", new object[] {
                        GetTokenRequest}, this.GetTokenOperationCompleted, userState);
        }
        
        private void OnGetTokenOperationCompleted(object arg) {
            if ((this.GetTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTokenCompleted(this, new GetTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("PingResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public PingResponse Ping([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] PingRequest PingRequest) {
            object[] results = this.Invoke("Ping", new object[] {
                        PingRequest});
            return ((PingResponse)(results[0]));
        }
        
        /// <remarks/>
        public void PingAsync(PingRequest PingRequest) {
            this.PingAsync(PingRequest, null);
        }
        
        /// <remarks/>
        public void PingAsync(PingRequest PingRequest, object userState) {
            if ((this.PingOperationCompleted == null)) {
                this.PingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPingOperationCompleted);
            }
            this.InvokeAsync("Ping", new object[] {
                        PingRequest}, this.PingOperationCompleted, userState);
        }
        
        private void OnPingOperationCompleted(object arg) {
            if ((this.PingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PingCompleted(this, new PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("RebootResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public RebootResponse Reboot([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] RebootRequest RebootRequest) {
            object[] results = this.Invoke("Reboot", new object[] {
                        RebootRequest});
            return ((RebootResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RebootAsync(RebootRequest RebootRequest) {
            this.RebootAsync(RebootRequest, null);
        }
        
        /// <remarks/>
        public void RebootAsync(RebootRequest RebootRequest, object userState) {
            if ((this.RebootOperationCompleted == null)) {
                this.RebootOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRebootOperationCompleted);
            }
            this.InvokeAsync("Reboot", new object[] {
                        RebootRequest}, this.RebootOperationCompleted, userState);
        }
        
        private void OnRebootOperationCompleted(object arg) {
            if ((this.RebootCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RebootCompleted(this, new RebootCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("RestartDomainResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public RestartDomainResponse RestartDomain([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] RestartDomainRequest RestartDomainRequest) {
            object[] results = this.Invoke("RestartDomain", new object[] {
                        RestartDomainRequest});
            return ((RestartDomainResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RestartDomainAsync(RestartDomainRequest RestartDomainRequest) {
            this.RestartDomainAsync(RestartDomainRequest, null);
        }
        
        /// <remarks/>
        public void RestartDomainAsync(RestartDomainRequest RestartDomainRequest, object userState) {
            if ((this.RestartDomainOperationCompleted == null)) {
                this.RestartDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestartDomainOperationCompleted);
            }
            this.InvokeAsync("RestartDomain", new object[] {
                        RestartDomainRequest}, this.RestartDomainOperationCompleted, userState);
        }
        
        private void OnRestartDomainOperationCompleted(object arg) {
            if ((this.RestartDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestartDomainCompleted(this, new RestartDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("SetDeviceSettingsResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public SetDeviceSettingsResponse SetDeviceSettings([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] SetDeviceSettingsRequest SetDeviceSettingsRequest) {
            object[] results = this.Invoke("SetDeviceSettings", new object[] {
                        SetDeviceSettingsRequest});
            return ((SetDeviceSettingsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetDeviceSettingsAsync(SetDeviceSettingsRequest SetDeviceSettingsRequest) {
            this.SetDeviceSettingsAsync(SetDeviceSettingsRequest, null);
        }
        
        /// <remarks/>
        public void SetDeviceSettingsAsync(SetDeviceSettingsRequest SetDeviceSettingsRequest, object userState) {
            if ((this.SetDeviceSettingsOperationCompleted == null)) {
                this.SetDeviceSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDeviceSettingsOperationCompleted);
            }
            this.InvokeAsync("SetDeviceSettings", new object[] {
                        SetDeviceSettingsRequest}, this.SetDeviceSettingsOperationCompleted, userState);
        }
        
        private void OnSetDeviceSettingsOperationCompleted(object arg) {
            if ((this.SetDeviceSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDeviceSettingsCompleted(this, new SetDeviceSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("SetDomainConfigResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public SetDomainConfigResponse SetDomainConfig([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] SetDomainConfigRequest SetDomainConfigRequest) {
            object[] results = this.Invoke("SetDomainConfig", new object[] {
                        SetDomainConfigRequest});
            return ((SetDomainConfigResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetDomainConfigAsync(SetDomainConfigRequest SetDomainConfigRequest) {
            this.SetDomainConfigAsync(SetDomainConfigRequest, null);
        }
        
        /// <remarks/>
        public void SetDomainConfigAsync(SetDomainConfigRequest SetDomainConfigRequest, object userState) {
            if ((this.SetDomainConfigOperationCompleted == null)) {
                this.SetDomainConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDomainConfigOperationCompleted);
            }
            this.InvokeAsync("SetDomainConfig", new object[] {
                        SetDomainConfigRequest}, this.SetDomainConfigOperationCompleted, userState);
        }
        
        private void OnSetDomainConfigOperationCompleted(object arg) {
            if ((this.SetDomainConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDomainConfigCompleted(this, new SetDomainConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("SetFileResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public SetFileResponse SetFile([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] SetFileRequest SetFileRequest) {
            object[] results = this.Invoke("SetFile", new object[] {
                        SetFileRequest});
            return ((SetFileResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetFileAsync(SetFileRequest SetFileRequest) {
            this.SetFileAsync(SetFileRequest, null);
        }
        
        /// <remarks/>
        public void SetFileAsync(SetFileRequest SetFileRequest, object userState) {
            if ((this.SetFileOperationCompleted == null)) {
                this.SetFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFileOperationCompleted);
            }
            this.InvokeAsync("SetFile", new object[] {
                        SetFileRequest}, this.SetFileOperationCompleted, userState);
        }
        
        private void OnSetFileOperationCompleted(object arg) {
            if ((this.SetFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetFileCompleted(this, new SetFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("SetFirmwareResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public SetFirmwareResponse SetFirmware([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] SetFirmwareRequest SetFirmwareRequest) {
            object[] results = this.Invoke("SetFirmware", new object[] {
                        SetFirmwareRequest});
            return ((SetFirmwareResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetFirmwareAsync(SetFirmwareRequest SetFirmwareRequest) {
            this.SetFirmwareAsync(SetFirmwareRequest, null);
        }
        
        /// <remarks/>
        public void SetFirmwareAsync(SetFirmwareRequest SetFirmwareRequest, object userState) {
            if ((this.SetFirmwareOperationCompleted == null)) {
                this.SetFirmwareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFirmwareOperationCompleted);
            }
            this.InvokeAsync("SetFirmware", new object[] {
                        SetFirmwareRequest}, this.SetFirmwareOperationCompleted, userState);
        }
        
        private void OnSetFirmwareOperationCompleted(object arg) {
            if ((this.SetFirmwareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetFirmwareCompleted(this, new SetFirmwareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("StartDomainResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public StartDomainResponse StartDomain([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] StartDomainRequest StartDomainRequest) {
            object[] results = this.Invoke("StartDomain", new object[] {
                        StartDomainRequest});
            return ((StartDomainResponse)(results[0]));
        }
        
        /// <remarks/>
        public void StartDomainAsync(StartDomainRequest StartDomainRequest) {
            this.StartDomainAsync(StartDomainRequest, null);
        }
        
        /// <remarks/>
        public void StartDomainAsync(StartDomainRequest StartDomainRequest, object userState) {
            if ((this.StartDomainOperationCompleted == null)) {
                this.StartDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartDomainOperationCompleted);
            }
            this.InvokeAsync("StartDomain", new object[] {
                        StartDomainRequest}, this.StartDomainOperationCompleted, userState);
        }
        
        private void OnStartDomainOperationCompleted(object arg) {
            if ((this.StartDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartDomainCompleted(this, new StartDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("StopDomainResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public StopDomainResponse StopDomain([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] StopDomainRequest StopDomainRequest) {
            object[] results = this.Invoke("StopDomain", new object[] {
                        StopDomainRequest});
            return ((StopDomainResponse)(results[0]));
        }
        
        /// <remarks/>
        public void StopDomainAsync(StopDomainRequest StopDomainRequest) {
            this.StopDomainAsync(StopDomainRequest, null);
        }
        
        /// <remarks/>
        public void StopDomainAsync(StopDomainRequest StopDomainRequest, object userState) {
            if ((this.StopDomainOperationCompleted == null)) {
                this.StopDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopDomainOperationCompleted);
            }
            this.InvokeAsync("StopDomain", new object[] {
                        StopDomainRequest}, this.StopDomainOperationCompleted, userState);
        }
        
        private void OnStopDomainOperationCompleted(object arg) {
            if ((this.StopDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopDomainCompleted(this, new StopDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("SubscribeResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public SubscribeResponse Subscribe([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] SubscribeRequest SubscribeRequest) {
            object[] results = this.Invoke("Subscribe", new object[] {
                        SubscribeRequest});
            return ((SubscribeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SubscribeAsync(SubscribeRequest SubscribeRequest) {
            this.SubscribeAsync(SubscribeRequest, null);
        }
        
        /// <remarks/>
        public void SubscribeAsync(SubscribeRequest SubscribeRequest, object userState) {
            if ((this.SubscribeOperationCompleted == null)) {
                this.SubscribeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubscribeOperationCompleted);
            }
            this.InvokeAsync("Subscribe", new object[] {
                        SubscribeRequest}, this.SubscribeOperationCompleted, userState);
        }
        
        private void OnSubscribeOperationCompleted(object arg) {
            if ((this.SubscribeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubscribeCompleted(this, new SubscribeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("UnsubscribeResponse", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
        public UnsubscribeResponse Unsubscribe([System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")] UnsubscribeRequest UnsubscribeRequest) {
            object[] results = this.Invoke("Unsubscribe", new object[] {
                        UnsubscribeRequest});
            return ((UnsubscribeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UnsubscribeAsync(UnsubscribeRequest UnsubscribeRequest) {
            this.UnsubscribeAsync(UnsubscribeRequest, null);
        }
        
        /// <remarks/>
        public void UnsubscribeAsync(UnsubscribeRequest UnsubscribeRequest, object userState) {
            if ((this.UnsubscribeOperationCompleted == null)) {
                this.UnsubscribeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnsubscribeOperationCompleted);
            }
            this.InvokeAsync("Unsubscribe", new object[] {
                        UnsubscribeRequest}, this.UnsubscribeOperationCompleted, userState);
        }
        
        private void OnUnsubscribeOperationCompleted(object arg) {
            if ((this.UnsubscribeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnsubscribeCompleted(this, new UnsubscribeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class CompareConfigRequest {
        
        private CompareConfigRequestCompareConfig compareConfigField;
        
        /// <remarks/>
        public CompareConfigRequestCompareConfig CompareConfig {
            get {
                return this.compareConfigField;
            }
            set {
                this.compareConfigField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class CompareConfigRequestCompareConfig {
        
        private CompareConfigRequestCompareConfigFrom fromField;
        
        private CompareConfigRequestCompareConfigTO toField;
        
        private string domainField;
        
        /// <remarks/>
        public CompareConfigRequestCompareConfigFrom From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
            }
        }
        
        /// <remarks/>
        public CompareConfigRequestCompareConfigTO To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class CompareConfigRequestCompareConfigFrom {
        
        private object itemField;
        
        private ItemChoiceType itemElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Config", typeof(backup))]
        [System.Xml.Serialization.XmlElementAttribute("Persisted", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Running", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Settings", typeof(export))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class backup {
        
        private string domainField;
        
        private byte[] valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="base64Binary")]
        public byte[] Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="subscription-state-url", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class subscriptionstateurl {
        
        private string uRLField;
        
        private subscriptionstate valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public subscriptionstate Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="subscription-state", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public enum subscriptionstate {
        
        /// <remarks/>
        active,
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        duplicate,
        
        /// <remarks/>
        fault,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class firmware {
        
        private byte[] valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="base64Binary")]
        public byte[] Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class file {
        
        private string domainField;
        
        private string locationField;
        
        private string nameField;
        
        private byte[] valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="base64Binary")]
        public byte[] Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="management-interface", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class managementinterface {
        
        private managementtype typeField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public managementtype type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="management-type", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public enum managementtype {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("web-mgmt")]
        webmgmt,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="crypto-file-name", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class cryptofilename {
        
        private cryptolocation locationField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public cryptolocation location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="crypto-location", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public enum cryptolocation {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cert:")]
        cert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sharedcert:")]
        sharedcert,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class export {
        
        private byte[] valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="base64Binary")]
        public byte[] Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType {
        
        /// <remarks/>
        Config,
        
        /// <remarks/>
        Persisted,
        
        /// <remarks/>
        Running,
        
        /// <remarks/>
        Settings,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class CompareConfigRequestCompareConfigTO {
        
        private object itemField;
        
        private ItemChoiceType1 itemElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Config", typeof(backup))]
        [System.Xml.Serialization.XmlElementAttribute("Persisted", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Running", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("Settings", typeof(export))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType1 ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0", IncludeInSchema=false)]
    public enum ItemChoiceType1 {
        
        /// <remarks/>
        Config,
        
        /// <remarks/>
        Persisted,
        
        /// <remarks/>
        Running,
        
        /// <remarks/>
        Settings,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class CompareConfigResponse {
        
        private CompareConfigResponseCompareConfig itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CompareConfig")]
        public CompareConfigResponseCompareConfig Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class CompareConfigResponseCompareConfig {
        
        private compareresult compareResultField;
        
        private string domainField;
        
        /// <remarks/>
        public compareresult CompareResult {
            get {
                return this.compareResultField;
            }
            set {
                this.compareResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="compare-result", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public enum compareresult {
        
        /// <remarks/>
        identical,
        
        /// <remarks/>
        different,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class DeleteDomainRequest {
        
        private string domainField;
        
        /// <remarks/>
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class DeleteDomainResponse {
        
        private status itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Status")]
        public status Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public enum status {
        
        /// <remarks/>
        ok,
        
        /// <remarks/>
        error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetCryptoArtifactsRequest {
        
        private string domainField;
        
        /// <remarks/>
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetCryptoArtifactsResponse {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CryptoArtifacts", typeof(GetCryptoArtifactsResponseCryptoArtifacts))]
        [System.Xml.Serialization.XmlElementAttribute("Status", typeof(status))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetCryptoArtifactsResponseCryptoArtifacts {
        
        private cryptofilename[] itemsField;
        
        private string domainField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CryptoFileName")]
        public cryptofilename[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetDeviceInfoRequest {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetDeviceInfoResponse {
        
        private object[] itemsField;
        
        private ItemsChoiceType[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DeviceFeature", typeof(devicefeature))]
        [System.Xml.Serialization.XmlElementAttribute("DeviceID", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("DeviceName", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("DeviceSerialNo", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("DeviceType", typeof(devicetype))]
        [System.Xml.Serialization.XmlElementAttribute("FailureDetected", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("FirmwareVersion", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("ManagementInterface", typeof(managementinterface))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="device-feature", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public enum devicefeature {
        
        /// <remarks/>
        MQ,
        
        /// <remarks/>
        TAM,
        
        /// <remarks/>
        HSM,
        
        /// <remarks/>
        DataGlue,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("JAXP-API")]
        JAXPAPI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PKCS7-SMIME")]
        PKCS7SMIME,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SQL-ODBC")]
        SQLODBC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Tibco-EMS")]
        TibcoEMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("WebSphere-JMS")]
        WebSphereJMS,
        
        /// <remarks/>
        XG4,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="device-type", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public enum devicetype {
        
        /// <remarks/>
        XA35,
        
        /// <remarks/>
        XS40,
        
        /// <remarks/>
        XI50,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.datapower.com/schemas/appliance/management/1.0", IncludeInSchema=false)]
    public enum ItemsChoiceType {
        
        /// <remarks/>
        DeviceFeature,
        
        /// <remarks/>
        DeviceID,
        
        /// <remarks/>
        DeviceName,
        
        /// <remarks/>
        DeviceSerialNo,
        
        /// <remarks/>
        DeviceType,
        
        /// <remarks/>
        FailureDetected,
        
        /// <remarks/>
        FirmwareVersion,
        
        /// <remarks/>
        ManagementInterface,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetDeviceSettingsRequest {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetDeviceSettingsResponse {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Settings", typeof(export))]
        [System.Xml.Serialization.XmlElementAttribute("Status", typeof(status))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetDomainConfigRequest {
        
        private string domainField;
        
        /// <remarks/>
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetDomainConfigResponse {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Config", typeof(backup))]
        [System.Xml.Serialization.XmlElementAttribute("Status", typeof(status))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetDomainListRequest {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetDomainListResponse {
        
        private string[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Domain")]
        public string[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetDomainStatusRequest {
        
        private string domainField;
        
        /// <remarks/>
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetDomainStatusResponse {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Domain", typeof(GetDomainStatusResponseDomain))]
        [System.Xml.Serialization.XmlElementAttribute("Status", typeof(status))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetDomainStatusResponseDomain {
        
        private opstate opStateField;
        
        private configstate configStateField;
        
        private bool debugStateField;
        
        private string nameField;
        
        /// <remarks/>
        public opstate OpState {
            get {
                return this.opStateField;
            }
            set {
                this.opStateField = value;
            }
        }
        
        /// <remarks/>
        public configstate ConfigState {
            get {
                return this.configStateField;
            }
            set {
                this.configStateField = value;
            }
        }
        
        /// <remarks/>
        public bool DebugState {
            get {
                return this.debugStateField;
            }
            set {
                this.debugStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="op-state", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public enum opstate {
        
        /// <remarks/>
        up,
        
        /// <remarks/>
        down,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="config-state", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public enum configstate {
        
        /// <remarks/>
        saved,
        
        /// <remarks/>
        modified,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetErrorReportRequest {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetErrorReportResponse {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ErrorReport", typeof(file))]
        [System.Xml.Serialization.XmlElementAttribute("Status", typeof(status))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetLogRequest {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetLogResponse {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetTokenRequest {
        
        private tokentype typeField;
        
        private string userField;
        
        private string passwordField;
        
        private string domainField;
        
        /// <remarks/>
        public tokentype Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="token-type", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public enum tokentype {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("login/web-mgmt")]
        loginwebmgmt,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class GetTokenResponse {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Status", typeof(status))]
        [System.Xml.Serialization.XmlElementAttribute("Token", typeof(string))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class PingRequest {
        
        private string subscriptionIDField;
        
        /// <remarks/>
        public string SubscriptionID {
            get {
                return this.subscriptionIDField;
            }
            set {
                this.subscriptionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class PingResponse {
        
        private subscriptionstate itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SubscriptionState")]
        public subscriptionstate Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class RebootRequest {
        
        private rebootmode modeField;
        
        /// <remarks/>
        public rebootmode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="reboot-mode", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public enum rebootmode {
        
        /// <remarks/>
        reboot,
        
        /// <remarks/>
        reload,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class RebootResponse {
        
        private status itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Status")]
        public status Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class RestartDomainRequest {
        
        private string domainField;
        
        /// <remarks/>
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class RestartDomainResponse {
        
        private status itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Status")]
        public status Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class SetDeviceSettingsRequest {
        
        private export settingsField;
        
        /// <remarks/>
        public export Settings {
            get {
                return this.settingsField;
            }
            set {
                this.settingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class SetDeviceSettingsResponse {
        
        private status statusField;
        
        /// <remarks/>
        public status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class SetDomainConfigRequest {
        
        private backup configField;
        
        /// <remarks/>
        public backup Config {
            get {
                return this.configField;
            }
            set {
                this.configField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class SetDomainConfigResponse {
        
        private status itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Status")]
        public status Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class SetFileRequest {
        
        private file fileField;
        
        /// <remarks/>
        public file File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class SetFileResponse {
        
        private status itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Status")]
        public status Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class SetFirmwareRequest {
        
        private firmware firmwareField;
        
        /// <remarks/>
        public firmware Firmware {
            get {
                return this.firmwareField;
            }
            set {
                this.firmwareField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class SetFirmwareResponse {
        
        private status itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Status")]
        public status Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class StartDomainRequest {
        
        private string domainField;
        
        /// <remarks/>
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class StartDomainResponse {
        
        private status itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Status")]
        public status Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class StopDomainRequest {
        
        private string domainField;
        
        /// <remarks/>
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class StopDomainResponse {
        
        private status itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Status")]
        public status Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class SubscribeRequest {
        
        private SubscribeRequestSubscription subscriptionField;
        
        /// <remarks/>
        public SubscribeRequestSubscription Subscription {
            get {
                return this.subscriptionField;
            }
            set {
                this.subscriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class SubscribeRequestSubscription {
        
        private string uRLField;
        
        private subscriptiontopic[] topicsField;
        
        private string idField;
        
        /// <remarks/>
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Topic", IsNullable=false)]
        public subscriptiontopic[] Topics {
            get {
                return this.topicsField;
            }
            set {
                this.topicsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="subscription-topic", Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public enum subscriptiontopic {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("*")]
        Item,
        
        /// <remarks/>
        firmware,
        
        /// <remarks/>
        operational,
        
        /// <remarks/>
        configuration,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class SubscribeResponse {
        
        private subscriptionstateurl itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SubscriptionState")]
        public subscriptionstateurl Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class UnsubscribeRequest {
        
        private UnsubscribeRequestSubscription subscriptionField;
        
        /// <remarks/>
        public UnsubscribeRequestSubscription Subscription {
            get {
                return this.subscriptionField;
            }
            set {
                this.subscriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class UnsubscribeRequestSubscription {
        
        private subscriptiontopic[] topicsField;
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Topic", IsNullable=false)]
        public subscriptiontopic[] Topics {
            get {
                return this.topicsField;
            }
            set {
                this.topicsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.datapower.com/schemas/appliance/management/1.0")]
    public partial class UnsubscribeResponse {
        
        private subscriptionstate itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SubscriptionState")]
        public subscriptionstate Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CompareConfigCompletedEventHandler(object sender, CompareConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompareConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompareConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompareConfigResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompareConfigResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteDomainCompletedEventHandler(object sender, DeleteDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeleteDomainResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeleteDomainResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetCryptoArtifactsCompletedEventHandler(object sender, GetCryptoArtifactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCryptoArtifactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCryptoArtifactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetCryptoArtifactsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetCryptoArtifactsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetDeviceInfoCompletedEventHandler(object sender, GetDeviceInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeviceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeviceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDeviceInfoResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDeviceInfoResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetDeviceSettingsCompletedEventHandler(object sender, GetDeviceSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeviceSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeviceSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDeviceSettingsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDeviceSettingsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetDomainConfigCompletedEventHandler(object sender, GetDomainConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDomainConfigResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDomainConfigResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetDomainListCompletedEventHandler(object sender, GetDomainListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDomainListResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDomainListResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetDomainStatusCompletedEventHandler(object sender, GetDomainStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDomainStatusResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDomainStatusResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetErrorReportCompletedEventHandler(object sender, GetErrorReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetErrorReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetErrorReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetErrorReportResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetErrorReportResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetLogCompletedEventHandler(object sender, GetLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetLogResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetLogResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetTokenCompletedEventHandler(object sender, GetTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetTokenResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetTokenResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void PingCompletedEventHandler(object sender, PingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PingResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PingResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void RebootCompletedEventHandler(object sender, RebootCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RebootCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RebootCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RebootResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RebootResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void RestartDomainCompletedEventHandler(object sender, RestartDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestartDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestartDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RestartDomainResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RestartDomainResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SetDeviceSettingsCompletedEventHandler(object sender, SetDeviceSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDeviceSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDeviceSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SetDeviceSettingsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SetDeviceSettingsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SetDomainConfigCompletedEventHandler(object sender, SetDomainConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDomainConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDomainConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SetDomainConfigResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SetDomainConfigResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SetFileCompletedEventHandler(object sender, SetFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SetFileResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SetFileResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SetFirmwareCompletedEventHandler(object sender, SetFirmwareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetFirmwareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetFirmwareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SetFirmwareResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SetFirmwareResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void StartDomainCompletedEventHandler(object sender, StartDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StartDomainResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StartDomainResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void StopDomainCompletedEventHandler(object sender, StopDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StopDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StopDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StopDomainResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StopDomainResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SubscribeCompletedEventHandler(object sender, SubscribeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubscribeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubscribeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubscribeResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubscribeResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void UnsubscribeCompletedEventHandler(object sender, UnsubscribeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnsubscribeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnsubscribeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UnsubscribeResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UnsubscribeResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591